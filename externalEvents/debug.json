{
  "associatedLayout": "MainScene",
  "lastChangeTimeStamp": 0,
  "name": "Debug",
  "events": [
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "name": "Debug",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "KeyPressed"
              },
              "parameters": [
                "",
                "Numpad0"
              ]
            },
            {
              "type": {
                "value": "BuiltinCommonInstructions::Once"
              },
              "parameters": []
            }
          ],
          "actions": [
            {
              "type": {
                "value": "DebuggerTools::EnableDebugDraw"
              },
              "parameters": [
                "",
                "no",
                "",
                "no",
                "no"
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "KeyPressed"
              },
              "parameters": [
                "",
                "Numpad1"
              ]
            },
            {
              "type": {
                "value": "BuiltinCommonInstructions::Once"
              },
              "parameters": []
            }
          ],
          "actions": [
            {
              "type": {
                "value": "DebuggerTools::EnableDebugDraw"
              },
              "parameters": [
                "",
                "",
                "yes",
                "no",
                "no"
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "KeyPressed"
              },
              "parameters": [
                "",
                "Numpad2"
              ]
            },
            {
              "type": {
                "value": "BuiltinCommonInstructions::Once"
              },
              "parameters": []
            }
          ],
          "actions": [
            {
              "type": {
                "value": "NavMeshPathfinding::NavMeshPathfindingBehavior::SetDestination"
              },
              "parameters": [
                "EnemySlimes",
                "NavMeshPathfindingBehavior",
                "Base.CenterX()",
                "Base.CenterY()",
                ""
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "KeyPressed"
              },
              "parameters": [
                "",
                "r"
              ]
            },
            {
              "type": {
                "value": "BuiltinCommonInstructions::Once"
              },
              "parameters": []
            }
          ],
          "actions": [
            {
              "type": {
                "value": "Scene"
              },
              "parameters": [
                "",
                "\"MainScene\"",
                ""
              ]
            }
          ]
        },
        {
          "disabled": true,
          "folded": true,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "DepartScene"
              },
              "parameters": [
                ""
              ]
            }
          ],
          "actions": [],
          "events": [
            {
              "type": "BuiltinCommonInstructions::ForEach",
              "object": "GridTiles",
              "conditions": [],
              "actions": [],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "TileSystem::TileBehavior::IsOccupied"
                      },
                      "parameters": [
                        "GridTiles",
                        "TileBehavior",
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "Create"
                      },
                      "parameters": [
                        "",
                        "StaticText",
                        "GridTiles.X()",
                        "GridTiles.Y()",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "LinkedObjects::LinkObjects"
                      },
                      "parameters": [
                        "",
                        "StaticText",
                        "GridTiles"
                      ]
                    },
                    {
                      "type": {
                        "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                      },
                      "parameters": [
                        "StaticText",
                        "Text",
                        "=",
                        "\"1\""
                      ]
                    },
                    {
                      "type": {
                        "value": "ScalableCapability::ScalableBehavior::SetValue"
                      },
                      "parameters": [
                        "StaticText",
                        "Scale",
                        "=",
                        "0.35"
                      ]
                    },
                    {
                      "type": {
                        "value": "ChangePlan"
                      },
                      "parameters": [
                        "StaticText",
                        "=",
                        "500"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "inverted": true,
                        "value": "TileSystem::TileBehavior::IsOccupied"
                      },
                      "parameters": [
                        "GridTiles",
                        "TileBehavior",
                        ""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "Create"
                      },
                      "parameters": [
                        "",
                        "StaticText",
                        "GridTiles.X()",
                        "GridTiles.Y()",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "LinkedObjects::LinkObjects"
                      },
                      "parameters": [
                        "",
                        "StaticText",
                        "GridTiles"
                      ]
                    },
                    {
                      "type": {
                        "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                      },
                      "parameters": [
                        "StaticText",
                        "Text",
                        "=",
                        "\"0\""
                      ]
                    },
                    {
                      "type": {
                        "value": "ScalableCapability::ScalableBehavior::SetValue"
                      },
                      "parameters": [
                        "StaticText",
                        "Scale",
                        "=",
                        "0.35"
                      ]
                    },
                    {
                      "type": {
                        "value": "ChangePlan"
                      },
                      "parameters": [
                        "StaticText",
                        "=",
                        "500"
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "disabled": true,
          "folded": true,
          "type": "BuiltinCommonInstructions::ForEach",
          "object": "GridTiles",
          "conditions": [
            {
              "type": {
                "value": "LinkedObjects::PickObjectsLinkedTo"
              },
              "parameters": [
                "",
                "StaticText",
                "GridTiles",
                ""
              ]
            }
          ],
          "actions": [],
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "TileSystem::TileBehavior::IsOccupied"
                  },
                  "parameters": [
                    "GridTiles",
                    "TileBehavior",
                    ""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "StaticText",
                    "Text",
                    "=",
                    "\"1\""
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "inverted": true,
                    "value": "TileSystem::TileBehavior::IsOccupied"
                  },
                  "parameters": [
                    "GridTiles",
                    "TileBehavior",
                    ""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "StaticText",
                    "Text",
                    "=",
                    "\"0\""
                  ]
                }
              ]
            }
          ]
        },
        {
          "folded": true,
          "type": "BuiltinCommonInstructions::ForEach",
          "object": "EnemySlimes",
          "conditions": [],
          "actions": [
            {
              "type": {
                "value": "SetSceneVariableAsBoolean"
              },
              "parameters": [
                "debugHasLinkedText",
                "False"
              ]
            }
          ],
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "LinkedObjects::PickObjectsLinkedTo"
                  },
                  "parameters": [
                    "",
                    "Heart",
                    "EnemySlimes",
                    ""
                  ]
                },
                {
                  "type": {
                    "value": "LinkedObjects::PickObjectsLinkedTo"
                  },
                  "parameters": [
                    "",
                    "StaticText",
                    "EnemySlimes",
                    ""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetSceneVariableAsBoolean"
                  },
                  "parameters": [
                    "debugHasLinkedText",
                    "True"
                  ]
                },
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "StaticText",
                    "Text",
                    "=",
                    "ToString(EnemySlimes.EnemyHealth::CurrentHitPoints())"
                  ]
                },
                {
                  "type": {
                    "value": "MettreXY"
                  },
                  "parameters": [
                    "StaticText",
                    "=",
                    "EnemySlimes.X() - 5",
                    "=",
                    "EnemySlimes.Y() - StaticText.Height()"
                  ]
                },
                {
                  "type": {
                    "value": "MettreXY"
                  },
                  "parameters": [
                    "Heart",
                    "=",
                    "EnemySlimes.X() + StaticText.Width()",
                    "=",
                    "EnemySlimes.Y() - StaticText.Height()"
                  ]
                }
              ],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "AnimatableCapability::AnimatableBehavior::Name"
                      },
                      "parameters": [
                        "EnemySlimes",
                        "Animation",
                        "=",
                        "\"death\""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ModVarScene"
                      },
                      "parameters": [
                        "currency",
                        "+",
                        "EnemySlimes.Variable(valueOnKill)"
                      ]
                    },
                    {
                      "type": {
                        "value": "Delete"
                      },
                      "parameters": [
                        "EnemySlimes",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "Delete"
                      },
                      "parameters": [
                        "Heart",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "Delete"
                      },
                      "parameters": [
                        "StaticText",
                        ""
                      ]
                    },
                    {
                      "type": {
                        "value": "PlaySound"
                      },
                      "parameters": [
                        "",
                        "assets\\sounds\\slime_death.mp3",
                        "",
                        "",
                        ""
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "SceneVariableAsBoolean"
                  },
                  "parameters": [
                    "debugHasLinkedText",
                    ""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "Create"
                  },
                  "parameters": [
                    "",
                    "StaticText",
                    "GridTiles.X()",
                    "GridTiles.Y()",
                    ""
                  ]
                },
                {
                  "type": {
                    "value": "LinkedObjects::LinkObjects"
                  },
                  "parameters": [
                    "",
                    "StaticText",
                    "EnemySlimes"
                  ]
                },
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "StaticText",
                    "Text",
                    "=",
                    "ToString(EnemySlimes.EnemyHealth::CurrentHitPoints())"
                  ]
                },
                {
                  "type": {
                    "value": "ScalableCapability::ScalableBehavior::SetValue"
                  },
                  "parameters": [
                    "StaticText",
                    "Scale",
                    "=",
                    "0.20"
                  ]
                },
                {
                  "type": {
                    "value": "ChangePlan"
                  },
                  "parameters": [
                    "StaticText",
                    "=",
                    "500"
                  ]
                },
                {
                  "type": {
                    "value": "Create"
                  },
                  "parameters": [
                    "",
                    "Heart",
                    "GridTiles.X()",
                    "GridTiles.Y()",
                    ""
                  ]
                },
                {
                  "type": {
                    "value": "LinkedObjects::LinkObjects"
                  },
                  "parameters": [
                    "",
                    "Heart",
                    "EnemySlimes"
                  ]
                },
                {
                  "type": {
                    "value": "ScalableCapability::ScalableBehavior::SetValue"
                  },
                  "parameters": [
                    "Heart",
                    "Scale",
                    "=",
                    "0.25"
                  ]
                },
                {
                  "type": {
                    "value": "ChangePlan"
                  },
                  "parameters": [
                    "Heart",
                    "=",
                    "500"
                  ]
                }
              ]
            }
          ]
        }
      ],
      "parameters": []
    },
    {
      "colorB": 228,
      "colorG": 176,
      "colorR": 74,
      "creationTime": 0,
      "name": "Console de test",
      "source": "",
      "type": "BuiltinCommonInstructions::Group",
      "events": [
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "SceneVariableAsBoolean"
              },
              "parameters": [
                "Debug.refreshTestDisplay",
                "True"
              ]
            }
          ],
          "actions": [],
          "events": [
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"selectedTowerLevel\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "TestingText",
                    "Text",
                    "=",
                    "TestingText.initialText + ToString(Debug.selectedTowerLevel)"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"selectedTowerName\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "TestingText",
                    "Text",
                    "=",
                    "TestingText.initialText + Debug.selectedTowerName"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"towerDamage\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "TestingText",
                    "Text",
                    "=",
                    "TestingText.initialText + ToString(TowerStats[VariableString(Debug.selectedTowerName)].damage[Variable(Debug.selectedTowerLevel)])"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"towerAttackSpeed\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "TestingText",
                    "Text",
                    "=",
                    "TestingText.initialText + ToString(TowerStats[VariableString(Debug.selectedTowerName)].attackPerSecond[Variable(Debug.selectedTowerLevel)])"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"towerRange\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "TestingText",
                    "Text",
                    "=",
                    "TestingText.initialText + ToString(TowerStats[VariableString(Debug.selectedTowerName)].range[Variable(Debug.selectedTowerLevel)])"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"towerPrice\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "TestingText",
                    "Text",
                    "=",
                    "TestingText.initialText + ToString(TowerStats[VariableString(Debug.selectedTowerName)].price[Variable(Debug.selectedTowerLevel)])"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"towerEffect\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "TestingText",
                    "Text",
                    "=",
                    "TestingText.initialText + TowerStats[VariableString(Debug.selectedTowerName)].effect"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"towerEffectDuration\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "TestingText",
                    "Text",
                    "=",
                    "TestingText.initialText + ToString(TowerStats[VariableString(Debug.selectedTowerName)].effectDuration[Variable(Debug.selectedTowerLevel)])"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"freezeEffectStrength\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "TestingText",
                    "Text",
                    "=",
                    "TestingText.initialText + ToString(AllEffects.freezeStrength)"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"selectedWaveNumber\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "TestingText",
                    "Text",
                    "=",
                    "TestingText.initialText + ToString(Debug.selectedWaveNumber + 1)"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"bossHP\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "TestingText",
                    "Text",
                    "=",
                    "TestingText.initialText + ToString(EnemyWaves[Variable(Debug.selectedWaveNumber)].bossHP)"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"bossSpeed\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "TestingText",
                    "Text",
                    "=",
                    "TestingText.initialText + ToString(EnemyWaves[Variable(Debug.selectedWaveNumber)].bossSpeed)"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"creepsInWave\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "TestingText",
                    "Text",
                    "=",
                    "TestingText.initialText + ToString(EnemyWaves[Variable(Debug.selectedWaveNumber)].CreepSlime)"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"creepSpawnDelay\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "TestingText",
                    "Text",
                    "=",
                    "TestingText.initialText + ToString(EnemyWaves[Variable(Debug.selectedWaveNumber)].timeBetweenSpawns)"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"creepsHP\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "TestingText",
                    "Text",
                    "=",
                    "TestingText.initialText + ToString(EnemyStats.CreepSlime.HP)"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"creepsMoveSpeed\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                  },
                  "parameters": [
                    "TestingText",
                    "Text",
                    "=",
                    "TestingText.initialText + ToString(EnemyStats.CreepSlime.moveSpeed)"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "SetSceneVariableAsBoolean"
                  },
                  "parameters": [
                    "Debug.refreshTestDisplay",
                    ""
                  ]
                }
              ]
            }
          ]
        },
        {
          "folded": true,
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "PanelSpriteButton::PanelSpriteButton::IsClicked"
              },
              "parameters": [
                "ApplyAllButton",
                ""
              ]
            },
            {
              "type": {
                "value": "BuiltinCommonInstructions::Once"
              },
              "parameters": []
            }
          ],
          "actions": [],
          "events": [
            {
              "type": "BuiltinCommonInstructions::ForEach",
              "object": "BuildingChoice",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "TowerBehaviour::TowerBehaviour::UpdateStats"
                  },
                  "parameters": [
                    "BuildingChoice",
                    "TowerBehaviour",
                    ""
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "MouseButtonReleased"
              },
              "parameters": [
                "",
                "Left"
              ]
            },
            {
              "type": {
                "value": "SourisSurObjet"
              },
              "parameters": [
                "TestingText",
                "",
                "",
                ""
              ]
            },
            {
              "type": {
                "value": "BuiltinCommonInstructions::Once"
              },
              "parameters": []
            }
          ],
          "actions": [],
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Sélection du nom de la tour à modifier"
            },
            {
              "folded": true,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"selectedTowerName\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetSceneVariableAsBoolean"
                  },
                  "parameters": [
                    "Debug.doNext",
                    "True"
                  ]
                }
              ],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "VarSceneTxt"
                      },
                      "parameters": [
                        "Debug.selectedTowerName",
                        "=",
                        "\"base\""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ModVarSceneTxt"
                      },
                      "parameters": [
                        "Debug.selectedTowerName",
                        "=",
                        "\"ice\""
                      ]
                    },
                    {
                      "type": {
                        "value": "SetSceneVariableAsBoolean"
                      },
                      "parameters": [
                        "Debug.doNext",
                        "False"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "VarSceneTxt"
                      },
                      "parameters": [
                        "Debug.selectedTowerName",
                        "=",
                        "\"ice\""
                      ]
                    },
                    {
                      "type": {
                        "value": "SceneVariableAsBoolean"
                      },
                      "parameters": [
                        "Debug.doNext",
                        "True"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ModVarSceneTxt"
                      },
                      "parameters": [
                        "Debug.selectedTowerName",
                        "=",
                        "\"base\""
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                      },
                      "parameters": [
                        "TestingText",
                        "Text",
                        "=",
                        "TestingText.initialText + Debug.selectedTowerName"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetSceneVariableAsBoolean"
                      },
                      "parameters": [
                        "Debug.refreshTestDisplay",
                        "True"
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Sélection du niveau à modifier pour la tour"
            },
            {
              "folded": true,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"selectedTowerLevel\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetSceneVariableAsBoolean"
                  },
                  "parameters": [
                    "Debug.doNext",
                    "True"
                  ]
                }
              ],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "VarScene"
                      },
                      "parameters": [
                        "Debug.selectedTowerLevel",
                        "=",
                        "0"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ModVarScene"
                      },
                      "parameters": [
                        "Debug.selectedTowerLevel",
                        "=",
                        "1"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetSceneVariableAsBoolean"
                      },
                      "parameters": [
                        "Debug.doNext",
                        "False"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "VarScene"
                      },
                      "parameters": [
                        "Debug.selectedTowerLevel",
                        "=",
                        "1"
                      ]
                    },
                    {
                      "type": {
                        "value": "SceneVariableAsBoolean"
                      },
                      "parameters": [
                        "Debug.doNext",
                        "True"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ModVarScene"
                      },
                      "parameters": [
                        "Debug.selectedTowerLevel",
                        "=",
                        "0"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                      },
                      "parameters": [
                        "TestingText",
                        "Text",
                        "=",
                        "TestingText.initialText + ToString(Debug.selectedTowerLevel+1)"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetSceneVariableAsBoolean"
                      },
                      "parameters": [
                        "Debug.refreshTestDisplay",
                        "True"
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Sélection de la vague de creeps à modifier"
            },
            {
              "folded": true,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"selectedWaveNumber\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarScene"
                  },
                  "parameters": [
                    "Debug.selectedWaveNumber",
                    "+",
                    "1"
                  ]
                }
              ],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "VarScene"
                      },
                      "parameters": [
                        "Debug.selectedWaveNumber",
                        ">",
                        "4"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ModVarScene"
                      },
                      "parameters": [
                        "Debug.selectedWaveNumber",
                        "=",
                        "0"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                      },
                      "parameters": [
                        "TestingText",
                        "Text",
                        "=",
                        "TestingText.initialText + ToString(Debug.selectedWaveNumber+1)"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetSceneVariableAsBoolean"
                      },
                      "parameters": [
                        "Debug.refreshTestDisplay",
                        "True"
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"towerDamage\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "TowerStats[VariableString(Debug.selectedTowerName)].damage[Variable(Debug.selectedTowerLevel)]",
                    "+",
                    "1"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"towerAttackSpeed\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "TowerStats[VariableString(Debug.selectedTowerName)].attackPerSecond[Variable(Debug.selectedTowerLevel)]",
                    "+",
                    "0.1"
                  ]
                },
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "TowerStats[VariableString(Debug.selectedTowerName)].attackPerSecond[Variable(Debug.selectedTowerLevel)]",
                    "=",
                    "roundTo(TowerStats[VariableString(Debug.selectedTowerName)].attackPerSecond[Variable(Debug.selectedTowerLevel)], 1)"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"towerRange\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "TowerStats[VariableString(Debug.selectedTowerName)].range[Variable(Debug.selectedTowerLevel)]",
                    "+",
                    "8"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"towerPrice\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "TowerStats[VariableString(Debug.selectedTowerName)].price[Variable(Debug.selectedTowerLevel)]",
                    "+",
                    "1"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"towerEffectDuration\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "TowerStats[VariableString(Debug.selectedTowerName)].effectDuration[Variable(Debug.selectedTowerLevel)]",
                    "+",
                    "0.25"
                  ]
                },
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "TowerStats[VariableString(Debug.selectedTowerName)].effectDuration[Variable(Debug.selectedTowerLevel)]",
                    "=",
                    "roundTo(TowerStats[VariableString(Debug.selectedTowerName)].effectDuration[Variable(Debug.selectedTowerLevel)], 1)"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"freezeEffectStrength\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "AllEffects.freezeStrength",
                    "+",
                    "0.1"
                  ]
                },
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "AllEffects.freezeStrength",
                    "=",
                    "roundTo(AllEffects.freezeStrength, 1)"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"bossHP\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "EnemyWaves[Variable(Debug.selectedWaveNumber)].bossHP",
                    "+",
                    "5"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"bossSpeed\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "EnemyWaves[Variable(Debug.selectedWaveNumber)].bossSpeed",
                    "+",
                    "5"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"creepsInWave\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "EnemyWaves[Variable(Debug.selectedWaveNumber)].CreepSlime",
                    "+",
                    "1"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"creepSpawnDelay\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "EnemyWaves[Variable(Debug.selectedWaveNumber)].timeBetweenSpawns",
                    "+",
                    "1"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"creepsHP\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "EnemyStats.CreepSlime.HP",
                    "+",
                    "1"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"creepsMoveSpeed\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "EnemyStats.CreepSlime.moveSpeed",
                    "+",
                    "5"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "SetSceneVariableAsBoolean"
                  },
                  "parameters": [
                    "Debug.refreshTestDisplay",
                    "True"
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "BuiltinCommonInstructions::Standard",
          "conditions": [
            {
              "type": {
                "value": "MouseButtonReleased"
              },
              "parameters": [
                "",
                "Right"
              ]
            },
            {
              "type": {
                "value": "SourisSurObjet"
              },
              "parameters": [
                "TestingText",
                "",
                "",
                ""
              ]
            },
            {
              "type": {
                "value": "BuiltinCommonInstructions::Once"
              },
              "parameters": []
            }
          ],
          "actions": [],
          "events": [
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Sélection du nom de la tour à modifier"
            },
            {
              "folded": true,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"selectedTowerName\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetSceneVariableAsBoolean"
                  },
                  "parameters": [
                    "Debug.doNext",
                    "True"
                  ]
                }
              ],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "VarSceneTxt"
                      },
                      "parameters": [
                        "Debug.selectedTowerName",
                        "=",
                        "\"base\""
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ModVarSceneTxt"
                      },
                      "parameters": [
                        "Debug.selectedTowerName",
                        "=",
                        "\"ice\""
                      ]
                    },
                    {
                      "type": {
                        "value": "SetSceneVariableAsBoolean"
                      },
                      "parameters": [
                        "Debug.doNext",
                        "False"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "VarSceneTxt"
                      },
                      "parameters": [
                        "Debug.selectedTowerName",
                        "=",
                        "\"ice\""
                      ]
                    },
                    {
                      "type": {
                        "value": "SceneVariableAsBoolean"
                      },
                      "parameters": [
                        "Debug.doNext",
                        "True"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ModVarSceneTxt"
                      },
                      "parameters": [
                        "Debug.selectedTowerName",
                        "=",
                        "\"base\""
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                      },
                      "parameters": [
                        "TestingText",
                        "Text",
                        "=",
                        "TestingText.initialText + Debug.selectedTowerName"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetSceneVariableAsBoolean"
                      },
                      "parameters": [
                        "Debug.refreshTestDisplay",
                        "True"
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Sélection du niveau à modifier pour la tour"
            },
            {
              "folded": true,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"selectedTowerLevel\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "SetSceneVariableAsBoolean"
                  },
                  "parameters": [
                    "Debug.doNext",
                    "True"
                  ]
                }
              ],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "VarScene"
                      },
                      "parameters": [
                        "Debug.selectedTowerLevel",
                        "=",
                        "0"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ModVarScene"
                      },
                      "parameters": [
                        "Debug.selectedTowerLevel",
                        "=",
                        "1"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetSceneVariableAsBoolean"
                      },
                      "parameters": [
                        "Debug.doNext",
                        "False"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "VarScene"
                      },
                      "parameters": [
                        "Debug.selectedTowerLevel",
                        "=",
                        "1"
                      ]
                    },
                    {
                      "type": {
                        "value": "SceneVariableAsBoolean"
                      },
                      "parameters": [
                        "Debug.doNext",
                        "True"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ModVarScene"
                      },
                      "parameters": [
                        "Debug.selectedTowerLevel",
                        "=",
                        "0"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                      },
                      "parameters": [
                        "TestingText",
                        "Text",
                        "=",
                        "TestingText.initialText + ToString(Debug.selectedTowerLevel+1)"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetSceneVariableAsBoolean"
                      },
                      "parameters": [
                        "Debug.refreshTestDisplay",
                        "True"
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Comment",
              "color": {
                "b": 109,
                "g": 230,
                "r": 255,
                "textB": 0,
                "textG": 0,
                "textR": 0
              },
              "comment": "Sélection de la vague de creeps à modifier"
            },
            {
              "folded": true,
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"selectedWaveNumber\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarScene"
                  },
                  "parameters": [
                    "Debug.selectedWaveNumber",
                    "-",
                    "1"
                  ]
                }
              ],
              "events": [
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [
                    {
                      "type": {
                        "value": "VarScene"
                      },
                      "parameters": [
                        "Debug.selectedWaveNumber",
                        "<",
                        "0"
                      ]
                    }
                  ],
                  "actions": [
                    {
                      "type": {
                        "value": "ModVarScene"
                      },
                      "parameters": [
                        "Debug.selectedWaveNumber",
                        "=",
                        "4"
                      ]
                    }
                  ]
                },
                {
                  "type": "BuiltinCommonInstructions::Standard",
                  "conditions": [],
                  "actions": [
                    {
                      "type": {
                        "value": "TextContainerCapability::TextContainerBehavior::SetValue"
                      },
                      "parameters": [
                        "TestingText",
                        "Text",
                        "=",
                        "TestingText.initialText + ToString(Debug.selectedWaveNumber+1)"
                      ]
                    },
                    {
                      "type": {
                        "value": "SetSceneVariableAsBoolean"
                      },
                      "parameters": [
                        "Debug.refreshTestDisplay",
                        "True"
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"towerDamage\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "TowerStats[VariableString(Debug.selectedTowerName)].damage[Variable(Debug.selectedTowerLevel)]",
                    "-",
                    "1"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"towerAttackSpeed\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "TowerStats[VariableString(Debug.selectedTowerName)].attackPerSecond[Variable(Debug.selectedTowerLevel)]",
                    "-",
                    "0.1"
                  ]
                },
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "TowerStats[VariableString(Debug.selectedTowerName)].attackPerSecond[Variable(Debug.selectedTowerLevel)]",
                    "=",
                    "roundTo(TowerStats[VariableString(Debug.selectedTowerName)].attackPerSecond[Variable(Debug.selectedTowerLevel)], 1)"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"towerRange\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "TowerStats[VariableString(Debug.selectedTowerName)].range[Variable(Debug.selectedTowerLevel)]",
                    "-",
                    "8"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"towerPrice\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "TowerStats[VariableString(Debug.selectedTowerName)].price[Variable(Debug.selectedTowerLevel)]",
                    "-",
                    "1"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"towerEffectDuration\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "TowerStats[VariableString(Debug.selectedTowerName)].effectDuration[Variable(Debug.selectedTowerLevel)]",
                    "-",
                    "0.25"
                  ]
                },
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "TowerStats[VariableString(Debug.selectedTowerName)].effectDuration[Variable(Debug.selectedTowerLevel)]",
                    "=",
                    "roundTo(TowerStats[VariableString(Debug.selectedTowerName)].effectDuration[Variable(Debug.selectedTowerLevel)], 1)"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"freezeEffectStrength\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "AllEffects.freezeStrength",
                    "-",
                    "0.1"
                  ]
                },
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "AllEffects.freezeStrength",
                    "=",
                    "roundTo(AllEffects.freezeStrength, 1)"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"bossHP\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "EnemyWaves[Variable(Debug.selectedWaveNumber)].bossHP",
                    "-",
                    "5"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"bossSpeed\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "EnemyWaves[Variable(Debug.selectedWaveNumber)].bossSpeed",
                    "-",
                    "5"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"creepsInWave\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "EnemyWaves[Variable(Debug.selectedWaveNumber)].CreepSlime",
                    "-",
                    "1"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"creepSpawnDelay\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "EnemyWaves[Variable(Debug.selectedWaveNumber)].timeBetweenSpawns",
                    "-",
                    "1"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"creepsHP\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "EnemyStats.CreepSlime.HP",
                    "-",
                    "1"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [
                {
                  "type": {
                    "value": "VarObjetTxt"
                  },
                  "parameters": [
                    "TestingText",
                    "customId",
                    "=",
                    "\"creepsMoveSpeed\""
                  ]
                }
              ],
              "actions": [
                {
                  "type": {
                    "value": "ModVarGlobal"
                  },
                  "parameters": [
                    "EnemyStats.CreepSlime.moveSpeed",
                    "-",
                    "5"
                  ]
                }
              ]
            },
            {
              "type": "BuiltinCommonInstructions::Standard",
              "conditions": [],
              "actions": [
                {
                  "type": {
                    "value": "SetSceneVariableAsBoolean"
                  },
                  "parameters": [
                    "Debug.refreshTestDisplay",
                    "True"
                  ]
                }
              ]
            }
          ]
        }
      ],
      "parameters": []
    }
  ]
}